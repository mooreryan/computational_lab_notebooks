name: Build and test

on:
  push:
    branches:
      - 'master'
      - 'staging'
  pull_request:
    branches:
      - '*'

env:
  PROGRAM_NAME: cln

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-compiler:
          - 4.12.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install deps (Linux)
        run: sudo apt-get update && sudo apt-get install -y git git-annex
        if: matrix.os == 'ubuntu-latest'

      - name: Install deps (MacOS)
        run: brew install git git-annex
        if: matrix.os == 'macos-latest'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          cache-prefix: v1-${{ matrix.os }}

      - name: Install OCaml deps (Ubuntu)
        run: opam install . --deps-only --with-doc --with-test
        if: matrix.os == 'ubuntu-latest'

      - name: Install OCaml deps (MacOS)
        run: opam install . --jobs 1 --deps-only --with-doc --with-test
        if: matrix.os == 'macos-latest'

      - name: Test (Ubuntu)
        run: opam exec -- make test
        if: matrix.os == 'ubuntu-latest'

      - name: Test (MacOS)
        run: opam exec -- make test_mac
        if: matrix.os == 'macos-latest'

      - run: opam exec -- make send_coverage
        if: matrix.os == 'ubuntu-latest'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (Ubuntu)
        run: opam exec -- make build_release
        if: matrix.os == 'ubuntu-latest'

      - name: Build (MacOS)
        run: opam exec -- make build_release_mac
        if: matrix.os == 'macos-latest'

      # If all goes well, upload the build artifact.  This must be
      # placed after a non-instrumented binary is built.
      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ env.PROGRAM_NAME }}
          path: _build/install/default/bin/${{ env.PROGRAM_NAME }}

